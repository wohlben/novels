# Generated by Django 3.0.8 on 2020-08-01 08:13

from django.db import migrations, models
from lxml import html


def extract_authors_from_past_fetches(apps, schema_editor):
    Author = apps.get_model("novels", "Author")
    Scrapes = apps.get_model("scrapes", "Scrapes")
    Parser = apps.get_model("scrapes", "Parser")
    novel_parser = Parser.objects.get(name="rrl novel")
    for scrape in Scrapes.objects.exclude(content=None).filter(parser_type=novel_parser).iterator():
        try:
            tree = html.fromstring(scrape.content)
            author_name = tree.xpath('//h4[@property="author"]//a/text()')[0]
            author_url = tree.xpath('//h4[@property="author"]//a/@href')[0]
            author_remote_id = author_url.split("/")[-1]
            print(author_remote_id)
            if len(author_remote_id) > 0:
                author, created = Author.objects.get_or_create(
                    defaults={"url": author_url, "name": author_name,}, remote_id=author_remote_id
                )
                if created:
                    print("created " + author_name)

        except Exception as e:
            print(f"failed on {scrape.id}")
            print(e)


def rollback(apps, schema_editor):
    # we created the table in same migration, so its gonna be gone anyway
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("novels", "0012_auto_20200728_1952"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.TextField()),
                ("remote_id", models.TextField(unique=True)),
                ("url", models.URLField()),
            ],
        ),
        migrations.RunPython(extract_authors_from_past_fetches, reverse_code=rollback),
    ]
